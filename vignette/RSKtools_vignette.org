#+TITLE: RSKtools for Matlab access to RBR data
#+AUTHOR: Clark Richards, Phd \\ clark.richards@rbr-global.com
#+OPTIONS: H:5 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+LATEX_HEADER: \usepackage[margin=1in]{geometry}

* Introduction
  <<sec:intro>>

RBR instruments output data in an open database format known as SQLite[fn:1]. To facilitate direct access to the data in Matlab[TM], we created the =RSKtools= toolbox. =RSKtools= facilitates direct access to the data stored in =RSK= files by using the included =mksqlite= library, for which we have provided versions compiled for Windows (32/64bit), Linux (64bit) and Mac OSX (64bit). It may be necessary to compile your own version, using the source code provided at http://sourceforge.net/projects/mksqlite/. 

=RSKtools= also provides some convenience functions for common data extraction (e.g. extracting profiles from a continuous dataset) and visualization (plotting individual profiles). For plans for future additions, see the [[sec:future][Future plans]] section.

* Installing
  <<sec:install>>

The latest stable version of =RSKtools= can be found at [[kdjfkdjf][jkdgj]]

  - Unzip the archive (to =~/matlab/RSKtools=, for instance)
  - Add the folder to your path inside matlab (=addpath ~/matlab/RSKtools= or some nifty GUI thing)
  - type =help RSKtools= to get an overview and take a look at the examples.

  
* Examples of use
  <<sec:examples>>
** Loading files

** Working with profiles

#+begin_src matlab :results file :exports both
file = 'testfiles/065583_20140612_0739.rsk';
rsk = RSKopen(file);

%% load the first 10 profiles
rsk = RSKreadprofiles(rsk, 1:10);

%% plot the downcasts
subplot(121)
RSKplotprofiles(rsk, [], 'temperature', 'down')
subplot(122)
RSKplotprofiles(rsk, [], 'salinity', 'down')

print -dpng profiles.png;
ans = 'profiles.png';
#+end_src

#+RESULTS:
[[file:profiles.png]]


* Future plans
  <<sec:future>>



[fn:1] http://www.sqlite.org/famous.html
